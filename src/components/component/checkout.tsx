/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/hwzJNb81Bk4
 */
import {
  CardTitle,
  CardDescription,
  CardHeader,
  CardContent,
  CardFooter,
  Card,
} from "@/components/ui/card";
import { Label } from "@/components/ui/label";
import { Input } from "@/components/ui/input";
import {
  SelectValue,
  SelectTrigger,
  SelectItem,
  SelectContent,
  Select,
} from "@/components/ui/select";
import { Button } from "@/components/ui/button";
import { useState } from "react";
import { useSocket } from "@/contexts/SocketContext";
import { useAtom } from "jotai";
import { cartAtom } from "@/lib/cartAtom";
import { useRouter } from "next/router";
import { useUser } from "@clerk/nextjs";
import { OrderForm, Payment, Urgency } from "@/lib/types";

export function Checkout() {
  const [cart, setCard] = useAtom(cartAtom);
  const [formState, setFormState] = useState<OrderForm>({
    location: "",
    name: "",
    paymentType: Payment.VENMO,
    schedule: "now",
    urgency: Urgency.MEDIUM,
  });
  const router = useRouter();
  const { user } = useUser();
  const { socket, emitEvent } = useSocket();

  return (
    <Card className="w-full max-w-2xl md:max-w-4xl">
      <CardHeader>
        <CardTitle>Customer Information</CardTitle>
        <CardDescription>Please fill out the form below.</CardDescription>
      </CardHeader>
      <CardContent className="space-y-4">
        <div className="space-y-2">
          <Label htmlFor="name">Name</Label>
          <Input
            value={formState.name}
            onChange={(e) =>
              setFormState((prev) => ({ ...prev, name: e.target.value }))
            }
            id="name"
            placeholder="Enter your name"
          />
        </div>
        <div className="space-y-2">
          <Label htmlFor="location">Location</Label>
          <Input
            value={formState.location}
            onChange={(e) =>
              setFormState((prev) => ({ ...prev, location: e.target.value }))
            }
            id="location"
            placeholder="Enter your location"
          />
        </div>
        <div className="space-y-2">
          <Label htmlFor="payment-type">Payment Type</Label>
          <Select
            value={formState.paymentType}
            onValueChange={(v) =>
              setFormState((prev) => ({ ...prev, paymentType: v as Payment }))
            }
          >
            <SelectTrigger aria-label="Payment Type" id="payment-type">
              <SelectValue placeholder="Select Payment Type" />
            </SelectTrigger>
            <SelectContent>
              <SelectItem value="cash">Cash</SelectItem>
              <SelectItem value="venmo">Venmo</SelectItem>
              <SelectItem value="paypal">PayPal</SelectItem>
            </SelectContent>
          </Select>
        </div>
        <div className="space-y-2">
          <Label htmlFor="urgency">Urgency</Label>
          <Select
            value={formState.urgency}
            onValueChange={(v) =>
              setFormState((prev) => ({ ...prev, urgency: v as Urgency }))
            }
          >
            <SelectTrigger aria-label="Urgency" id="urgency">
              <SelectValue placeholder="Select Urgency Level" />
            </SelectTrigger>
            <SelectContent>
              <SelectItem value="low">Low</SelectItem>
              <SelectItem value="medium">Medium</SelectItem>
              <SelectItem value="severity">Severity</SelectItem>
            </SelectContent>
          </Select>
        </div>
        <div className="space-y-2">
          <Label htmlFor="schedule">Schedule</Label>
          <Select
            value={formState.schedule}
            onValueChange={(v) =>
              setFormState((prev) => ({ ...prev, schedule: v }))
            }
          >
            <SelectTrigger aria-label="Schedule" id="schedule">
              <SelectValue placeholder="Select Schedule" />
            </SelectTrigger>
            <SelectContent>
              <SelectItem value="now">Now</SelectItem>
              <SelectItem value="15-minutes">In 15 minutes</SelectItem>
              <SelectItem value="30-minutes">In 30 minutes</SelectItem>
              <SelectItem value="45-minutes">In 45 minutes</SelectItem>
              <SelectItem value="60-minutes">In 1 hour</SelectItem>
              <SelectItem value="75-minutes">In 1 hour 15 minutes</SelectItem>
              <SelectItem value="90-minutes">In 1 hour 30 minutes</SelectItem>
              <SelectItem value="105-minutes">In 1 hour 45 minutes</SelectItem>
              <SelectItem value="120-minutes">In 2 hours</SelectItem>
            </SelectContent>
          </Select>
        </div>
      </CardContent>
      <CardFooter>
        <div className="flex w-full justify-around ">
          <Button
            onClick={() => {
              if (!user?.id) {
                console.log("shit");
                return;
              }
              console.log("going out", {
                ...formState,
                ...cart,
                orderedId: user?.id,
              });
              socket.emit("order", {
                ...formState,
                ...cart,
                orderedId: user?.id,
              });
            }}
            className="w-2/5 rounded-lg"
          >
            Place order
          </Button>
          <Button
            variant={"secondary"}
            onClick={() => {
              router.back();
            }}
            className="w-2/5 rounded-lg"
          >
            Order more (pls)
          </Button>
        </div>
      </CardFooter>
    </Card>
  );
}
